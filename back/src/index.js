// -*- coding: utf-8 -*-
//server.js
//----------------------------------
// Created By: Matthew Kastl
// Created Date: 1/15/2023
// version 1.0
//----------------------------------
// """This file is an express webserver
// that serves the public direcotry under root.
//  """ 
//----------------------------------
// 
//
//Imports
const express = require('express');
const dotenv = require('dotenv');
const path = require('path'); 
const cors = require('cors');
const fs = require("fs").promises;
const spawn = require("child_process").spawn;

//Load in .env file.
dotenv.config();

//Construct a new webapp, this is our server
const app = express();

// Cross orgine handling
app.use(cors())

//Read in what port to use from the env
const port = process.env.PORT;

//Declare the dist directory as our static dir, and host it. Anything that hits
//the / endpoint will get the dist dir back
const publicPath = path.join(__dirname, '../../front');
console.log(publicPath)
app.use(express.static(publicPath));


var multer = require('multer')
var upload = multer({dest : './'}).single('photo') 


app.post('/imageupload', upload, function(req, res){

  (async () => {
      
    // string generated by canvas.toDataURL()
    const img = req.body.photo
    
    // strip off the data: url prefix to get just the base64-encoded bytes
    const data = img.replace(/^data:image\/\w+;base64,/, "");
    
    const buf = Buffer.from(data, "base64");
    await fs.writeFile("./uploads/image.png", buf);
  })();

  const scriptPath = path.join(__dirname, '')
  console.log(scriptPath)
  const pythonProcess = spawn('wsl', [ 'cd', '../handoccnet/demo', '&&', 'python3', 'demo.py', '--gpu', '0', '--path', 'input.png']);

  // pythonProcess.stdout.on('data', (data) => {
  //   console.log('pattern: ', data.toString());
  // });

  // pythonProcess.stderr.on('data', (data) => {
  //   console.error('err: ', data.toString());
  // });

  // pythonProcess.on('error', (error) => {
  //   console.error('error: ', error.message);
  // });

  // pythonProcess.on('close', (code) => {
  //   console.log('child process exited with code ', code);
  // });

  const sendFIlePath = path.join(__dirname, '../../uploads/image.png')
  console.log(sendFIlePath)
  res.sendFile(sendFIlePath)
})


//Start are server on the port we selected.
app.listen(port, () => {
  console.log(`[server]: Server is running at http://localhost:${port}`);
});